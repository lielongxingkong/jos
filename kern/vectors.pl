#!/usr/bin/perl -w

# Generate vectors.S, the trap/interrupt entry points.
# There has to be one entry point per interrupt number
# since otherwise there's no way for trap() to discover
# the interrupt number.

print "# generated by vectors.pl - do not edit\n";
print "# handlers\n";
print "#include <inc/mmu.h>\n";
print "#include <inc/memlayout.h>\n";
print "#include <inc/trap.h>\n";
print "#include <kern/picirq.h>\n";

for(my $i = 0; $i < 256; $i++){
    print ".globl vector$i;\n";
    print ".type name, \@function;\n";
    print ".align 2;\n";
    print "vector$i:\n";
    if(!($i == 8 || ($i >= 10 && $i <= 14) || $i == 17)){
        print "\tpushl \$0;\n";
    }
    print "\tpushl \$$i;\n";
    print "\tjmp _alltraps\n";
}
print ".text\n";

print "\n# vector table\n";
print ".data\n";
print ".globl vectors\n";
print "vectors:\n";
for(my $i = 0; $i < 256; $i++){
    print "  .long vector$i\n";
}

# sample output:
#   # handlers
#   .globl _alltraps
#   .globl vector0;
#   .type name, @function;
#   .align 2;
#   vector0:
#     pushl $0
#     pushl $0
#     jmp alltraps
#   ...
#   
#   # vector table
#   .data
#   .globl vectors
#   vectors:
#     .long vector0
#     .long vector1
#     .long vector2
#   ...

